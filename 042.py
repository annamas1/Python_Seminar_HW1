# 1.напечатать сторку в одну линию - C:\WINDOWS\System32\drivers\etc\nst

# f = open('file11.txt', 'r')  #, encoding='utf_8')
# print(f.readline())


# print('C:\WINDOWS\System32\drivers\etc\nst')
# print(r'C:\WINDOWS\System32\drivers\etc\nst')



# 2. на входе a = [4, 3, -10, 1, 7, 12], получить на выходе из этого списка  а=[4, -10, 12, 3, 1, 7]

# a = [4, 3, -10, 1, 7, 12]
# print(a.insert(1, -10))  # добавление в указанный элемент
# print(a.insert(2, 12)) 
# print(a.insert(3, 3)) 
# print(a.insert(5, 7))
# print(a)

# a = [4, 3, -10, 1, 7, 12]
# a.sort(key=lambda x: x%2)
# print(a)


# print(list1.append(11))  # добавление в конец
# print(list1)





# 3. На вход программы поступает список наименований рек, записанных в одну строчку через пробел. Необходимо отсортировать этот список в порядке убывания длин названий. Результат вывести в одну строчку через пробел.
# Sample Input:
# Лена Енисей Волга Дон
# Sample Output:
# Енисей Волга Лена Дон








# 4) Вводится строка. Требуется, используя введенную строку, сформировать N=10 пар кортежей в формате:
# (символ, порядковый индекс)
# Первый индекс имеет значение 0. Строка может быть короче 10 символов, а может быть и длиннее. То есть, число пар может быть 10 и менее. Используя функцию zip сформируйте указанные кортежи и сохраните в список с именем lst.
# Sample Input:
# Python дай мне силы пройти этот курс до конца!
# Sample Output:
# True


# 5. Напишите функцию triangle(a, b, c), которая принимает на вход три длины отрезков и определяет, можно ли из этих отрезков составить треугольник. 
# Входные данные
# Выходные данные
# triangle(1, 1, 2)
# Это не треугольник
# triangle(7, 6, 10)
